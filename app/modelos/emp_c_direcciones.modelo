<?php
/**
 * @autor Rixio Danilo Iguarán Chourio.
 * @cédula-profesional 12196442
 * @correo-eletrónico atencion.clientes@obringolfo.com
 * @denominacion OBRAS INFORMÁTICAS DEL GOLFO
 * @empresa OBRINGOLFO S.A.S. DE C.V.
 * @proyecto  goPAC.
 * @copyright 2021
 */


class Empresa_Direcciones extends ModeloBase{
    private $this_table;
    private $uid;
    private $tipo;
    private $vialidad_tipo;
    private $vialidad_nombre;
    private $exterior;
    private $interior;
    private $codigo_postal;
    private $colonia;
    private $localidad;
    private $municipio;
    private $entidad;
    private $pais;
    private $referencias;
    
    # ********************************************************** #
    public function __construct($adapter_empresa) {
        try {

            $this->this_table = "c_direcciones";
            parent::__construct($this->this_table, $adapter_empresa);

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    # ********************************************************** #
    public function getUid(){ return $this->uid; }
    public function setUid($uid){ $this->uid = $uid; }
    # ********************************************************** #
    public function getTipo(){ return $this->tipo; }
    public function setTipo($tipo){ $this->tipo = $tipo; }
    # ********************************************************** #
    public function getVialidad_tipo(){ return $this->vialidad_tipo; }
    public function setVialidad_tipo($vialidad_tipo){ $this->vialidad_tipo = $vialidad_tipo; }
    # ********************************************************** #
    public function getVialidad_nombre(){ return $this->vialidad_nombre; }
    public function setVialidad_nombre($vialidad_nombre){ $this->vialidad_nombre = $vialidad_nombre; }
    # ********************************************************** #
    public function getExterior(){ return $this->exterior; }
    public function setExterior($exterior){ $this->exterior = $exterior; }
    # ********************************************************** #
    public function getInterior(){ return $this->interior; }
    public function setInterior($interior){ $this->interior = $interior; }
    # ********************************************************** #
    public function getCodigo_postal(){ return intval($this->codigo_postal); }
    public function setCodigo_postal($codigo_postal){ $this->codigo_postal = intval($codigo_postal); }
    # ********************************************************** #
    public function getColonia(){ return $this->colonia; }
    public function setColonia($colonia){ $this->colonia = $colonia; }
    # ********************************************************** #
    public function getLocalidad(){ return $this->localidad; }
    public function setLocalidad($localidad){ $this->localidad = $localidad; }
    # ********************************************************** #
    public function getMunicipio(){ return $this->municipio; }
    public function setMunicipio($municipio){ $this->municipio = $municipio; }
    # ********************************************************** #
    public function getEntidad(){ return $this->entidad; }
    public function setEntidad($entidad){ $this->entidad = $entidad; }
    # ********************************************************** #
    public function getPais(){ return $this->pais; }
    public function setPais($pais){ $this->pais = $pais; }
    # ********************************************************** #
    public function getReferencias(){ return $this->referencias; }
    public function setReferencias($referencias){ $this->referencias = $referencias; }

    /** ******************************************************** **/
    public function registrar(){
        try {
            $this->auditar("Registrando nueva dirección en el catálogo.");
            $query = "INSERT INTO ".$this->this_table." 
                      VALUES(
                           '".$this->uid."',
                           '".$this->tipo."',
                           '".$this->vialidad_tipo."',
                           '".$this->vialidad_nombre."',
                           '".$this->exterior."',
                           '".$this->interior."',
                           '".$this->codigo_postal."',
                           '".$this->colonia."',
                           '".$this->localidad."',
                           '".$this->municipio."',
                           '".$this->entidad."',
                           '".$this->pais."',
                           '".$this->referencias."'
                      );";
            $this->auditar($query);
            $save = $this->db()->query($query);
            //$this->db()->error;
            return $save;

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    # ********************************************************** #
    public function actualizar($varUID){
        try {
            /** [VALIDANDO DATOS EN ALGUNO DE LOS CAMPOS] **/
            if(($this->uid_persona      == null) &&
               ($this->usuario          == null) &&
               ($this->secreto          == null) &&
               ($this->creacion         == null) &&
               ($this->acceso           == null) &&
               ($this->ip               == null) &&
               ($this->estado           == null) &&
               ($this->observaciones    == null)){
                $this->auditar("[Excepción][403] Actualización ejecutada sin datos.");
                throw new Exception('[403] Actualización ejecutada sin datos.');
            }

            /** [FORMANDO LA EXPRESIÓN DE ACTUALIZACIÓN] **/
            $Campos = Array();
            if($this->uid_persona != null){ //Tiene datos para actualizar
                $Campos['uid_persona'] = $this->uid_persona;
            }
            if($this->usuario != null){ //Tiene datos para actualizar
                $Campos['usuario'] = $this->usuario;
            }
            if($this->secreto != null){ //Tiene datos para actualizar
                $Campos['secreto'] = $this->secreto;
            }
            if($this->creacion != null){ //Tiene datos para actualizar
                $Campos['creacion'] = $this->creacion;
            }
            if($this->acceso != null){ //Tiene datos para actualizar
                $Campos['acceso'] = $this->acceso;
            }
            if($this->ip != null){ //Tiene datos para actualizar
                $Campos['ip'] = $this->ip;
            }
            if($this->estado != null){ //Tiene datos para actualizar
                $Campos['estado'] = $this->estado;
            }
            if($this->observaciones != null){ //Tiene datos para actualizar
                $Campos['observaciones'] = $this->observaciones;
            }

            $qCampos = ""; //acumulador de query
            foreach ($Campos as $Campo => $valor) {
                $qCampos .= $Campo." = '".$valor."', ";
            }
            $qCampos = substr($qCampos, 0, strlen($qCampos)-2); //le quito la coma y el espacio al final
            //Armo la instrucción SQL
            $query = "UPDATE c_usuarios SET ".$qCampos." WHERE uid='".$varUID."';";

            /** [ENVIANDO INSTRUCCIONES DE ACTUALIZACIÓN] **/
            $save = $this->db()->query($query);
            //$this->auditar("Query: ".$query);
            //$this->db()->error;
            return $save;

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    # ********************************************************** #

}
?>
