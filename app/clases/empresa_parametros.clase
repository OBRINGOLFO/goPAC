<?php
/**
 * @autor Rixio Danilo Iguarán Chourio.
 * @cédula-profesional 12196442
 * @correo-eletrónico atencion.clientes@obringolfo.com
 * @denominacion OBRAS INFORMÁTICAS DEL GOLFO
 * @empresa OBRINGOLFO S.A.S. DE C.V.
 * @proyecto  goPAC.
 * @copyright 2021
 */


class Empresa_Parametros extends EntidadBase{
    private $this_table;
    private $uid;
    private $rfc;
    private $regimen;
    private $curp;
    private $razon;
    private $denominacion;
    private $periodo;
    private $ejercicio;
    private $tasa_otros;
    private $tasa_ieps;
    private $tasa_iva;

    # ********************************************************** #
    public function __construct($adapter_empresa) {
        try {

            $this->this_table = "empParametros";
            parent::__construct($this->this_table, $adapter_empresa);

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    # ********************************************************** #
    public function getUid(){ return $this->uid; }
    public function setUid($uid){ $this->uid = $uid; }
    # ********************************************************** #
    public function getRfc(){ return $this->rfc; }
    public function setRfc($rfc){ $this->rfc = $rfc; }
    # ********************************************************** #
    public function getRegimen(){ return $this->regimen; }
    public function setRegimen($regimen){ $this->regimen = $regimen; }
    # ********************************************************** #
    public function getCurp(){ return $this->curp; }
    public function setCurp($curp){ $this->curp = $curp; }
    # ********************************************************** #
    public function getRazon(){ return $this->razon; }
    public function setRazon($razon){ $this->razon = $razon; }
    # ********************************************************** #
    public function getDenominacion(){ return $this->denominacion; }
    public function setDenominacion($denominacion){ $this->denominacion = $denominacion; }
    # ********************************************************** #
    public function getPeriodo(){ return intval($this->periodo); }
    public function setPeriodo($periodo){ $this->periodo = intval($periodo); }
    # ********************************************************** #
    public function getEjercicio(){ return intval($this->ejercicio); }
    public function setEjercicio($ejercicio){ $this->ejercicio = intval($ejercicio); }
    # ********************************************************** #
    public function getTasa_otros(){ return floatval($this->tasa_otros); }
    public function setTasa_otros($tasa_otros){ $this->tasa_otros = floatval($tasa_otros); }
    # ********************************************************** #
    public function getTasa_ieps(){ return floatval($this->tasa_ieps); }
    public function setTasa_ieps($tasa_ieps){ $this->tasa_ieps = floatval($tasa_ieps); }
    # ********************************************************** #
    public function getTasa_iva(){ return floatval($this->tasa_iva); }
    public function setTasa_iva($tasa_iva){ $this->tasa_iva = floatval($tasa_iva); }

    /** ********************************************************
     *  BUSCA LOS PARAMETROS GENERALES DE LA EMPRESA SEGUN SU RFC
     * ***************************************************** **/
    public function get_parametros($db_NAME){
        try {

            auditar("empresas_parametros.clase -> get_parametros(".$db_NAME.")");
            //$xQuery = "SELECT * FROM empParametros WHERE rfc='".$RFC_Empresa."'";
            $xQuery = 'SELECT * FROM empParametros WHERE SUBSTRING_INDEX(uid, "-", -1) = "'.$db_NAME.'"';
            $xRespuesta = $this->db()->query($xQuery);
            if($xRespuesta){
                return $xRespuesta->fetch_object();
            }else{
                return null;
            }

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    /** ********************************************************
     * 
     * ***************************************************** **/
    public function get_todas(){
        try {

            $xQuery = "SELECT * FROM c_empresas";
            $xRespuesta = $this->db()->query($xQuery);
            if($xRespuesta){
                return $xRespuesta;
            }else{
                return null;
            }

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    /** ********************************************************
     * 
     * ***************************************************** **/
    public function registrar(){
        try {

            $query = "INSERT INTO ".$this->this_table." (uid, razon, denominacion, rfc, curp, regimen, tasa_iva, tasa_ieps, tasa_otros, ejercicio, periodo)
                      VALUES(
                           '".$this->uid."',
                           '".$this->razon."',
                           '".$this->denominacion."',
                           '".$this->rfc."',
                           '".$this->curp."',
                           '".$this->regimen."',
                           '".$this->tasa_iva."',
                           '".$this->tasa_ieps."',
                           '".$this->tasa_otros."',
                           '".$this->ejercicio."',
                           '".$this->periodo."'
                      );";
            $save = $this->db()->query($query);
            //$this->db()->error;
            return $save;

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    # ********************************************************** #
    public function actualizar($varUID){
        try {
            /** [VALIDANDO DATOS EN ALGUNO DE LOS CAMPOS] **/
            if(($this->uid_persona      == null) &&
               ($this->usuario          == null) &&
               ($this->secreto          == null) &&
               ($this->creacion         == null) &&
               ($this->acceso           == null) &&
               ($this->ip               == null) &&
               ($this->estado           == null) &&
               ($this->observaciones    == null)){
                auditar("[Excepción][403] Actualización ejecutada sin datos.");
                throw new Exception('[403] Actualización ejecutada sin datos.');
            }

            /** [FORMANDO LA EXPRESIÓN DE ACTUALIZACIÓN] **/
            $Campos = Array();
            if($this->uid_persona != null){ //Tiene datos para actualizar
                $Campos['uid_persona'] = $this->uid_persona;
            }
            if($this->usuario != null){ //Tiene datos para actualizar
                $Campos['usuario'] = $this->usuario;
            }
            if($this->secreto != null){ //Tiene datos para actualizar
                $Campos['secreto'] = $this->secreto;
            }
            if($this->creacion != null){ //Tiene datos para actualizar
                $Campos['creacion'] = $this->creacion;
            }
            if($this->acceso != null){ //Tiene datos para actualizar
                $Campos['acceso'] = $this->acceso;
            }
            if($this->ip != null){ //Tiene datos para actualizar
                $Campos['ip'] = $this->ip;
            }
            if($this->estado != null){ //Tiene datos para actualizar
                $Campos['estado'] = $this->estado;
            }
            if($this->observaciones != null){ //Tiene datos para actualizar
                $Campos['observaciones'] = $this->observaciones;
            }

            $qCampos = ""; //acumulador de query
            foreach ($Campos as $Campo => $valor) {
                $qCampos .= $Campo." = '".$valor."', ";
            }
            $qCampos = substr($qCampos, 0, strlen($qCampos)-2); //le quito la coma y el espacio al final
            //Armo la instrucción SQL
            $query = "UPDATE c_usuarios SET ".$qCampos." WHERE uid='".$varUID."';";

            /** [ENVIANDO INSTRUCCIONES DE ACTUALIZACIÓN] **/
            $save = $this->db()->query($query);
            //auditar("Query: ".$query);
            //$this->db()->error;
            return $save;

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    # ********************************************************** #

}
?>
