<?php
/**
 * @autor Rixio Danilo Iguarán Chourio.
 * @cédula-profesional 12196442
 * @correo-eletrónico atencion.clientes@obringolfo.com
 * @denominacion OBRAS INFORMÁTICAS DEL GOLFO
 * @empresa OBRINGOLFO S.A.S. DE C.V.
 * @proyecto  goPAC.
 * @copyright 2021
 */


class Empresas extends EntidadBase{
    private $uid;
    private $rfc;
    private $razon;

    # ********************************************************** #
    public function __construct($adapter) {
        try {

            $table = "c_empresas";
            parent::__construct($table, $adapter);

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    # ********************************************************** #
    public function getUid(){ return $this->uid; }
    public function setUid($uid){ $this->uid = $uid; }
    # ********************************************************** #
    public function getRfc(){ return $this->rfc; }
    public function setRfc($rfc){ $this->rfc = $rfc; }
    # ********************************************************** #
    public function getRazon(){ return $this->razon; }
    public function setRazon($razon){ $this->razon = $razon; }
    /* ***************************************************************************
    *
    *************************************************************************** */
    public function get_todas(){
        try {

            $xQuery = "SELECT * FROM c_empresas";
            $xRespuesta = $this->db()->query($xQuery);
            if($xRespuesta){
                return $xRespuesta;
            }else{
                return null;
            }

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    /* ***************************************************************************
    *
    *************************************************************************** */
    public function get_empresas_usuario($xUID){
        try {

            //$xQuery = "SELECT * FROM c_empresas_usuarios WHERE uid_usuario='".$xUID."'";
            
            $xQuery = "SELECT * FROM c_empresas WHERE c_empresas.uid IN (SELECT c_empresas_usuarios.uid_empresa FROM c_empresas_usuarios WHERE c_empresas_usuarios.uid_usuario = '". $xUID ."')";
            $xRespuesta = $this->db()->query($xQuery);
            if($xRespuesta){
                return $xRespuesta;
            }else{
                return null;
            }

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    /* ***************************************************************************
    *
    *************************************************************************** */
    public function registrar(){
        try {

            $query = "INSERT INTO c_empresas (uid, rfc, razon)
                      VALUES(
                           '".$this->uid."',
                           '".$this->rfc."',
                           '".$this->razon."'
                      );";
            $save = $this->db()->query($query);
            //$this->db()->error;
            return $save;

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    # ********************************************************** #
    public function actualizar($varUID){
        try {
            /** [VALIDANDO DATOS EN ALGUNO DE LOS CAMPOS] **/
            if(($this->uid_persona      == null) &&
               ($this->usuario          == null) &&
               ($this->secreto          == null) &&
               ($this->creacion         == null) &&
               ($this->acceso           == null) &&
               ($this->ip               == null) &&
               ($this->estado           == null) &&
               ($this->observaciones    == null)){
                auditar("[Excepción][403] Actualización ejecutada sin datos.");
                throw new Exception('[403] Actualización ejecutada sin datos.');
            }

            /** [FORMANDO LA EXPRESIÓN DE ACTUALIZACIÓN] **/
            $Campos = Array();
            if($this->uid_persona != null){ //Tiene datos para actualizar
                $Campos['uid_persona'] = $this->uid_persona;
            }
            if($this->usuario != null){ //Tiene datos para actualizar
                $Campos['usuario'] = $this->usuario;
            }
            if($this->secreto != null){ //Tiene datos para actualizar
                $Campos['secreto'] = $this->secreto;
            }
            if($this->creacion != null){ //Tiene datos para actualizar
                $Campos['creacion'] = $this->creacion;
            }
            if($this->acceso != null){ //Tiene datos para actualizar
                $Campos['acceso'] = $this->acceso;
            }
            if($this->ip != null){ //Tiene datos para actualizar
                $Campos['ip'] = $this->ip;
            }
            if($this->estado != null){ //Tiene datos para actualizar
                $Campos['estado'] = $this->estado;
            }
            if($this->observaciones != null){ //Tiene datos para actualizar
                $Campos['observaciones'] = $this->observaciones;
            }

            $qCampos = ""; //acumulador de query
            foreach ($Campos as $Campo => $valor) {
                $qCampos .= $Campo." = '".$valor."', ";
            }
            $qCampos = substr($qCampos, 0, strlen($qCampos)-2); //le quito la coma y el espacio al final
            //Armo la instrucción SQL
            $query = "UPDATE c_usuarios SET ".$qCampos." WHERE uid='".$varUID."';";

            /** [ENVIANDO INSTRUCCIONES DE ACTUALIZACIÓN] **/
            $save = $this->db()->query($query);
            //auditar("Query: ".$query);
            //$this->db()->error;
            return $save;

        } catch (Exception $e) {
            mostrar_error($e);
        }
    }
    # ********************************************************** #

}
?>
